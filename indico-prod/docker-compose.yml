services:
  # The main Indico container which runs flask
  # The same image is also used to run celery
  indico-web: &indico-web
    build: worker
    command: /opt/indico/run_indico.sh
    restart: unless-stopped
    depends_on:
      indico-redis:
        condition: service_started
      indico-celery:
        condition: service_started
      indico-postgres:
        condition: service_healthy
    environment:
      - PGHOST=${PGHOST}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    networks:
      - backend
      - frontend
    ports:
     # Indico is accessible either via nginx (localhost:8080 by default), or
     # directly via localhost:9090. In that case, static assets are served by flask
      - "9090:59999"
    volumes:
      - 'archive:/opt/indico/archive' # file storage
      - 'customization:/opt/indico/custom'
      - 'static-files:/opt/indico/static-shared'
      - 'indico-logs:/opt/indico/log' # logs
      - type: bind
        source: ${INDICO_CONFIG}
        target: /opt/indico/etc/indico.conf
        read_only: true
      - type: bind
        source: ${INDICO_LOGGING_CONFIG}
        target: /opt/indico/etc/logging.yaml
        read_only: true
    tmpfs:
      - /opt/indico/tmp:mode=0777
  # Indico celery
  indico-celery: &indico-celery
    <<: *indico-web
    command: /opt/indico/run_celery.sh
    restart: unless-stopped
    depends_on:
      - indico-redis
    networks:
      - backend
    ports: []
  # Indico celery beat
  indico-celery-beat:
    <<: *indico-celery
    command: /opt/indico/run_celery.sh beat
    restart: unless-stopped
  # Redis
  indico-redis:
    image: redis
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - 'redis:/data'
  # Postgres
  indico-postgres:
    image: postgres:15-bookworm
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    networks:
      - backend
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER} -d ${PGDATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  # Nginx proxy
  # Indico can be accessed by default via localhost:8080
  indico-nginx:
    image: ghcr.io/nginxinc/nginx-unprivileged:stable-alpine
    restart: unless-stopped
    depends_on:
      - indico-web
    networks:
      - frontend
    ports:
      - "${NGINX_PORT:-8080}:8080"
    volumes:
      - 'static-files:/opt/indico/static:ro'
      - './nginx.conf:/etc/nginx/conf.d/default.conf:ro'

volumes:
  postgres-data:
  archive:
  static-files:
  customization:
  indico-logs:
  redis:
networks:
  backend: {}
  frontend: {}
